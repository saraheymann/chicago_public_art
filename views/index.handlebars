
<body>
 
    <nav class="navbar navbar-default navStyle" id="customNav">
        <div class="container-fluid row3">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
            <a class="navbar-brand navStyle" id="navHead" href="#">CHICAGO PUBLIC ART DATABASE</a>
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse navStyle" id="bs-example-navbar-collapse-1">
             
             <ul class="nav navbar-nav" id="list"> 
                {{!-- <li class="linkColor col-lg-9" id="tagline">a crowd sourced public art database</li> --}}
                {{!-- <li class="active"><button type="button" class="btn btn-default">Add Artwork</button></li> --}}
                <li class="col-lg-4 col-md-6 col-sm-6"><a class="linkSet" id="linkColor" href="http://localhost:8080/about">ABOUT<span class="sr-only">(current)</span></a></li>
                <li class="col-lg-6 col-md-6 col-sm-6"><a class="linkSet" id="linkColor" href="#">API <span class="sr-only">(current)</span></a></li>
            </ul>       
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
    </nav>
            <form class= "form-inline" 
                    ref='uploadForm' 
                    id='uploadForm' 
                    action='./upload' 
                    method='post' 
                    encType="multipart/form-data">
                        <input class="form-control formBorder" type="file" name="image" required />
                        <input class="form-control" type="text" name="description" id="descriptionBox" placeholder="Description" required/>
                        <input class="form-control" type="text" name="address" id="addressBox" placeholder="address" required />
                        <input class="form-control" id="submitBox" type='submit' value='Upload!' />
            </form>
        <div id= "map"></div>

    <script>

        var sqlData = {};

        function httpGetAsync(theUrl, callback){
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function() { 
                if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                    callback(xmlHttp.responseText);
            }
            xmlHttp.open("GET", theUrl, true); // true for asynchronous 
            xmlHttp.send(null);
        }

        $("#populateArt").on("click", function() {
            initMap();
        });

        //listen for submit event and run function to get data again

        function initMap() {
            var promise = new Promise (function(resolve,reject){
            httpGetAsync('./table', function(data){
                sqlData = data;
                if(sqlData !== 'undefined'){
                    resolve(sqlData);
                } else {
                    reject(Error("wrong shit man!"));
                }
            });

            });
            promise.then(function(sqlData){
                var JSONItems = [];
                var map = new google.maps.Map(document.getElementById('map'), {zoom: 12, passive: true}); 
                var geocoder = new google.maps.Geocoder;
                
                geocoder.geocode({'address': 'Chicago'}, function(results, status) {
                    if (status === 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var parsedJSON = JSON.parse(sqlData);
                    var parsedJSONArray = parsedJSON.art;
                
                    parsedJSONArray.forEach(function(element){
                        console.log(element);
                        var geoObject = {
                            lat: parseFloat(element.lat),
                            lng: parseFloat(element.long)
                        }
                        new google.maps.Marker({
                            map: map,
                            position: geoObject
                        });

                        var contentString = '<div id="content">'+
                            '<div id="siteNotice">' +
                            '</div>' + '<div style="float:left"><img height="200px" width="200px" src='+element.path+'></div>'+
                           '<div id="bodyContent">' + '<p>description: '+ element.description +'</p><br>'+
                            '<p>Address: '+ element.address +'</p>' +
                            '</div>' +
                            '</div>'; 

                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                         var icon = {
                             url: element.path,
                             scaledSize: new google.maps.Size(50, 50)
                         }
                        var marker = new google.maps.Marker({
                            position: geoObject,
                            map: map,
                             //title: element.
                            icon: icon 
                        });
                        marker.addListener('click', function() {
                            infowindow.open(map, marker);
                        });
                    })

                    } else {
                        window.alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            })  
           
        }  

    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCyrCSftGam0-rKNG6IQwobVMoo5j8QauY&callback=initMap"></script> 

    <footer class="footer">
        <div class="container center-align no-pad-bot">
            <a href="https://github.com/saraheymann/chicago_public_art" target="_blank" class="footerLink"><h4>2017 Chicago Public Art Database</h4></a>
        </div>
    </footer>

    

</body>